/** Trash */
1. MVC4 Internet Aplication Simple Membership Provider 
2. InitializeSimpleMembershipAttribute in Filters/InitializeSimpleMembershipAttribute.cs
it takes care of initializing the simple membership provider, 
specify the context class that should be used to perform the DB operations i.e. UsersContext
it will create the membership database in the location specified in the connection string
It will create the table for our UserProfile model with all the columns for the properties specified in our UserProfile class
It will use the UserId field to maintain the foreign key relationship with the auto generated tables. 
It will use the UserName field as the field required for login. 
It will then create some of the tables needed for the authentication and authorization


!! WebSecurity.InitializeDatabaseConnection method will be used to specify the database 
    using the connection string("DefaultConnection" in this case), 
    the model which should be used to take the user profile information("UserProfile" in this case), 
    the filed that should be used for login("UserName" in this case).

!! AccountController: 
this class contains all the CRUD operations on our user profile
The important thing to notice is the InitializeSimpleMembership associated with the controller. So whenever user tries to login/register, the simple membership will get initialize automatically.

[InitializeSimpleMembership]
public class AccountController : Controller
{

}

3. modify the connection string
4. run the application and click on "register". 
This will call the AccountController, which will in turn call the InitializeSimpleMembership constructor and will create the simple membership database along with the UserProfile table that we needed for our UserProfile model.

Simple membership provider created a tables: 
UserProfile
webpages_Membership
webpages_Roles
webpages_UserInRoles -  this table will keep track of the user using the open authentication to login to the application
